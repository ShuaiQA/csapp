                            | #Excution begins at address 0
0x000:                      | 	.pos 0
0x000: 30f40003000000000000 | 	irmovq stack, %rsp
0x00a: 804800000000000000   | 	call main
0x013: 00                   | 	halt
0x018:                      | .align 8
                            | #Source block
0x018:                      | src:
0x018: 0a00000000000000     | 	.quad 0x00a
0x020: b000000000000000     | 	.quad 0x0b0
0x028: 000c000000000000     | 	.quad 0xc00
                            | # Destination block
0x030:                      | dest:
0x030: 1101000000000000     | 	.quad 0x111
0x038: 2202000000000000     | 	.quad 0x222
0x040: 3303000000000000     | 	.quad 0x333
                            | 
0x048:                      | main:
0x048: 30f71800000000000000 |     irmovq src,%rdi     # 源地址
0x052: 30f63000000000000000 |     irmovq dest,%rsi    # 目标地址
0x05c: 30f20300000000000000 |     irmovq $3,%rdx       # 第三个参数
0x066: 807000000000000000   |     call copy_block
0x06f: 90                   |     ret
                            | 
0x070:                      | copy_block:
0x070: 30f00000000000000000 |     irmovq $0,%rax      # 返回值清0
0x07a: 30fa0100000000000000 |     irmovq $1,%r10      # 将1放到r10中
0x084: 30fb0800000000000000 |     irmovq $8,%r11
0x08e:                      | loop:
0x08e: 6222                 |     andq %rdx,%rdx       # 查看rdx的值是否是0，如果是0退出
0x090: 73be00000000000000   |     je last
0x099: 50970000000000000000 |     mrmovq (%rdi),%r9     # 将第一个地址值放到寄存器中
0x0a3: 60b7                 |     addq %r11,%rdi        # 源地址自增
0x0a5: 40960000000000000000 |     rmmovq %r9,(%rsi)     # 将取出来的值放到rsi目的内存中
0x0af: 60b6                 |     addq %r11,%rsi        # 目标地址自增
0x0b1: 6390                 |     xorq %r9,%rax         # result ^= val
0x0b3: 61a2                 |     subq %r10,%rdx
0x0b5: 708e00000000000000   |     jmp loop
0x0be:                      | last:
0x0be: 90                   |     ret
                            | 
                            | # Stack starts here and grows to lower addresses
0x300:                      | 	.pos 0x300
0x300:                      | stack:
